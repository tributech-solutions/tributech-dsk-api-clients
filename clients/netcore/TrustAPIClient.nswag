{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"openapi\": \"3.0.1\",\r\n  \"info\": {\r\n    \"title\": \"Tributech DataSpace Trust API\",\r\n    \"description\": \"<p>API which allows to build, store, retrieve and validate proofs. There are several ways of how you can secure and certify your data, either via the integration of Tributech DSK Agents or via methods of this API. If you are not sure about which solution might be the right fit for you, please review the examples on GitHub or contact the support.<br /><br /><a href=\\\"https://tributech.io\\\" title=\\\"Website\\\">Website</a><br /><a href=\\\"https://github.com/tributech-solutions/tributech-dsk-api-clients\\\" title =\\\"API Clients on GitHub\\\">API Clients on GitHub</a><br /><a href=\\\"https://tributech.atlassian.net/servicedesk/customer/portals\\\" title =\\\"Customer Support Portal\\\">Customer Support Portal</a><br /></p>\",\r\n    \"version\": \"v1\"\r\n  },\r\n  \"servers\": [\r\n  ],\r\n  \"paths\": {\r\n    \"/proof\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Proof\"\r\n        ],\r\n        \"summary\": \"Saves a Proof.\",\r\n        \"description\": \" Sample request:\\r\\n\\r\\n\\t{\\r\\n\\t    \\\"Proof\\\":\\r\\n\\t    {\\r\\n\\t       \\\"Id\\\": \\\"6d42e74f-7777-41a9-897d-4fbfd8e2f9b6\\\",\\r\\n\\t       \\\"RootHash\\\": \\\"xZZqgSGI3jlYSYCNq3IcYVbrGRW87O/+1+lP4ABCDqc=\\\",\\r\\n\\t       \\\"Signature\\\": \\\"D98nRXumz8/gXu8hJ/uMkDait3gUosp4zu4JTCuKlIX4yaabYgnQKNhR7WAr4nsPsp2H43kF43pDtTtn932LJe+w/Ii9SMe5n5e4L3IdunORzQPPqAhsXFhnb9tHle1Eb2KYD5+lK8m5Ud/IU5WADz366o8MKppHKOdxWTG6z0Yf7uAa9U5b6oRrKjY7AJmXnNTql4PC8YLuTGZhye6S9kI1hHqj7YWaYdUQZYbuc0Q24wAfjVCQVLzDdhdrKA8YyUF1sF9qjZgv4Gx0tlLD+XeBgszscSDHQTOuq2tZ8CqxRVbPYRK06v9bYbpglrWgWP0io0TGYKUjtMbEIuOS2A==\\\"\\r\\n\\t    },\\r\\n\\t   \\\"ProofLocationWithoutKey\\\":\\r\\n\\t    {\\r\\n\\t       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n\\t       \\\"LastTimestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\",\\r\\n\\t       \\\"MerkleTreeDepth\\\": 3\\r\\n\\t    },\\r\\n\\t}\",\r\n        \"operationId\": \"SaveProof\",\r\n        \"requestBody\": {\r\n          \"description\": \"The Proof and a ProofLocation without Key.\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"BigchainDB error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      },\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Proof\"\r\n        ],\r\n        \"summary\": \"Retrieves a Proof for given data strem (by ValueMetadaId) at a given point in time.\",\r\n        \"description\": \" Sample request:\\r\\n\\r\\n\\t{\\r\\n\\t  \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n\\t  \\\"Timestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\"\\r\\n\\t}\",\r\n        \"operationId\": \"GetProof\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"ValueMetadataId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"ValueMetadataID of the data stream to validate\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"ValueMetadataID of the data stream to validate\",\r\n              \"format\": \"uuid\",\r\n              \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n            },\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          {\r\n            \"name\": \"Timestamp\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n              \"format\": \"date-time\",\r\n              \"example\": \"2020-01-01T01:01:00+01:00\"\r\n            },\r\n            \"example\": \"2020-01-01T01:01:00+01:00\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GetProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GetProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GetProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Proof not found\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/proofs\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Proof\"\r\n        ],\r\n        \"summary\": \"Saves multiple Proofs.\",\r\n        \"description\": \" Sample request:\\r\\n\\r\\n    [\\r\\n      {\\r\\n          \\\"Proof\\\":\\r\\n          {\\r\\n             \\\"Id\\\": \\\"6d42e74f-7777-41a9-897d-4fbfd8e2f9b7\\\",\\r\\n             \\\"RootHash\\\": \\\"xZZqgSGI3jlYSYCNq3IcYVbrGRW87O/+1+lP4ABCDqc=\\\",\\r\\n             \\\"Signature\\\": \\\"D98nRXumz8/gXu8hJ/uMkDait3gUosp4zu4JTCuKlIX4yaabYgnQKNhR7WAr4nsPsp2H43kF43pDtTtn932LJe+w/Ii9SMe5n5e4L3IdunORzQPPqAhsXFhnb9tHle1Eb2KYD5+lK8m5Ud/IU5WADz366o8MKppHKOdxWTG6z0Yf7uAa9U5b6oRrKjY7AJmXnNTql4PC8YLuTGZhye6S9kI1hHqj7YWaYdUQZYbuc0Q24wAfjVCQVLzDdhdrKA8YyUF1sF9qjZgv4Gx0tlLD+XeBgszscSDHQTOuq2tZ8CqxRVbPYRK06v9bYbpglrWgWP0io0TGYKUjtMbEIuOS2A==\\\"\\r\\n          },\\r\\n\\t   \\t  \\\"ProofLocationWithoutKey\\\":\\r\\n          {\\r\\n             \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n             \\\"LastTimestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\",\\r\\n             \\\"MerkleTreeDepth\\\": 2\\r\\n          },\\r\\n      }\\r\\n    ]\",\r\n        \"operationId\": \"SaveProofs\",\r\n        \"requestBody\": {\r\n          \"description\": \"The Proofs and a ProofLocations without Key.\\r\\nA Proof consists of Id, RootHash and Signature.\\r\\nA ProofLocationWithoutKey consists of ValueMetadataId, MerkleTreeDepth and LastTimestamp.\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"BigchainDB error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/validate/proof\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Proof\"\r\n        ],\r\n        \"summary\": \"Validates a proof for a data stream (by ValueMetadataId) at a given point in time using a given public key.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    {\\r\\n      \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n      \\\"Timestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\"\\r\\n    }\",\r\n        \"operationId\": \"ValidateProof\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"ValueMetadataId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"ValueMetadataID of the data stream to validate\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"ValueMetadataID of the data stream to validate\",\r\n              \"format\": \"uuid\",\r\n              \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n            },\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          {\r\n            \"name\": \"Timestamp\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n              \"format\": \"date-time\",\r\n              \"example\": \"2020-01-01T01:01:00+01:00\"\r\n            },\r\n            \"example\": \"2020-01-01T01:01:00+01:00\"\r\n          },\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"Public key used to validate the proof-signature against (optional). If not set, then the default key will be used for validation.\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofParams\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofParams\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofParams\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofParams\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/validate/proofs\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Proof\"\r\n        ],\r\n        \"summary\": \"Validates multiple proofs for data streams (by ValueMetadataId) at a given point in time using a public key.\",\r\n        \"description\": \" Sample request (Request body parameters):\\r\\n\\r\\n\\t\\t{\\r\\n\\t\\t\\t\\\"PublicKey\\\": \\\"-----BEGIN PUBLIC KEY-----\\r\\n\\t\\t\\t\\tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2UbiRhU2xaiX+3HqJhXg\\r\\n\\t\\t\\t\\t/GdgOUomqKMzw1jQcHnThjjoZ63qKXYiop7r1jY6qD/TNCcgTNh+1tVFjJK1bFCi\\r\\n\\t\\t\\t\\t8w6CxkaqK+Ib8bNX5HK+JoeKex/e4RSw84ZV3svX1fAtQl5/+dbPrU3BJClDKNpz\\r\\n\\t\\t\\t\\tSeEwqXBkJaVJSIiCZX5guYIC4plT99FyuiUfFHjJ4fZr1XA35I1xn2yHKbHNBaeg\\r\\n\\t\\t\\t\\tgmawzMVQKzX5Mn4Dl2kHzNPKsE/NA+Nnl89Ty0YHkWMcNUMxG3wX1PCI5G66asXe\\r\\n\\t\\t\\t\\t+AIAlRF7TXzCkkjv5K7ZHsqTwMHgS3pC1QpWhS5f2SjSH8pJJGnO0pQDn6wfGc8f\\r\\n\\t\\t\\t\\tJwIDAQAB\\r\\n\\t\\t\\t\\t-----END PUBLIC KEY-----\\\",\\r\\n\\t\\t    \\\"Keys\\\": [\\r\\n\\t\\t      {\\r\\n\\t\\t        \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n\\t\\t        \\\"Timestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\"\\r\\n\\t\\t      },\\r\\n\\t\\t      {\\r\\n\\t\\t        \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n\\t\\t        \\\"Timestamp\\\": \\\"2020-01-01T00:01:03.000+00:00\\\"\\r\\n\\t\\t      }\\r\\n\\t\\t    ]\\r\\n\\t\\t}\",\r\n        \"operationId\": \"ValidateProofs\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"PublicKey: Public key used to validate the proof-signature against (optional). If not set, then the default key will be used for validation.\\r\\n            \\r\\nKeys: The keys as a list of elements each consisting of ValueMetadataId and Timestamp (which act as unique identifier for each Proof).\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofsParams\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofsParams\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofsParams\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/ValidateProofsParams\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ValidateProofsResult\"\r\n                  }\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ValidateProofsResult\"\r\n                  }\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ValidateProofsResult\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/proofvalues\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Proof\"\r\n        ],\r\n        \"summary\": \"Retrieves a Proof for given data strem (by ValueMetadaId) at a given point in time along with the associated values.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    {\\r\\n        \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n        \\\"Timestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\"\\r\\n    }\",\r\n        \"operationId\": \"GetProofWithValues\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"ValueMetadataId\",\r\n            \"in\": \"query\",\r\n            \"description\": \"ValueMetadataID of the data stream to validate\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"ValueMetadataID of the data stream to validate\",\r\n              \"format\": \"uuid\",\r\n              \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n            },\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          {\r\n            \"name\": \"Timestamp\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n              \"format\": \"date-time\",\r\n              \"example\": \"2020-01-01T01:01:00+01:00\"\r\n            },\r\n            \"example\": \"2020-01-01T01:01:00+01:00\"\r\n          },\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GetProofAndValueResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GetProofAndValueResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/GetProofAndValueResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not found\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves a value as byte[] and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\",\\r\\n       \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n    }\",\r\n        \"operationId\": \"SaveValue\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created as byte[].\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value/byte\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves a value as byte[] and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:01:02.000+00:00\\\",\\r\\n       \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n    }\",\r\n        \"operationId\": \"SaveValueAsByte\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created as byte[].\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value/string\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves a value as base64 string and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:01:01.000+00:00\\\",\\r\\n       \\\"Values\\\": \\\"AAAAAAAA8D8AAAAAAAAAQA==\\\"\\r\\n    }\",\r\n        \"operationId\": \"SaveValueAsString\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created as base64 string.\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value/double\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves a value as double[] and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:01:03.000+00:00\\\",\\r\\n       \\\"Values\\\": [5, 6]\\r\\n    }\",\r\n        \"operationId\": \"SaveValueAsDouble\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created as double[].\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves multiple values as byte[] and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    [\\r\\n      {\\r\\n         \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n         \\\"Timestamp\\\": \\\"2020-01-01T00:01:05.000+00:00\\\",\\r\\n         \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n      },\\r\\n      {\\r\\n         \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n         \\\"Timestamp\\\": \\\"2020-01-01T00:01:06.000+00:00\\\",\\r\\n         \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n      }\\r\\n    ]\",\r\n        \"operationId\": \"SaveValues\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created.\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/byte\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves multiple values as byte[] and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    [\\r\\n      {\\r\\n         \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n         \\\"Timestamp\\\": \\\"2020-01-01T00:01:05.000+00:00\\\",\\r\\n         \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n      },\\r\\n      {\\r\\n         \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n         \\\"Timestamp\\\": \\\"2020-01-01T00:01:06.000+00:00\\\",\\r\\n         \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n      }\\r\\n    ]\",\r\n        \"operationId\": \"SaveValuesAsByte\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created.\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/string\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves multiple values as base64 string and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    [\\r\\n      {\\r\\n          \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n          \\\"Timestamp\\\": \\\"2020-01-01T00:01:07.000+00:00\\\",\\r\\n          \\\"Values\\\": \\\"AAAAAAAAHEAAAAAAAAAgQA==\\\"\\r\\n      },\\r\\n      {\\r\\n          \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n          \\\"Timestamp\\\": \\\"2020-01-01T00:01:08.000+00:00\\\",\\r\\n         \\\"Values\\\": \\\"AAAAAAAAIkAAAAAAAAAkQA==\\\"\\r\\n      },\\r\\n      {\\r\\n          \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n          \\\"Timestamp\\\": \\\"2020-01-01T00:01:09.000+00:00\\\",\\r\\n          \\\"Values\\\": \\\"AAAAAAAAJkAAAAAAAAAoQA==\\\"\\r\\n      },\\r\\n      {\\r\\n         \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n          \\\"Timestamp\\\": \\\"2020-01-01T00:01:10.000+00:00\\\",\\r\\n          \\\"Values\\\": \\\"AAAAAAAAKkAAAAAAAAAsQA==\\\"\\r\\n      }\\r\\n    ]\",\r\n        \"operationId\": \"SaveValuesAsString\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created.\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/double\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Value\"\r\n        ],\r\n        \"summary\": \"Saves multiple values as double[] and creates a proof using the integrated trust-agent.\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    [\\r\\n      {\\r\\n         \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n         \\\"Timestamp\\\": \\\"2020-01-01T00:01:11.000+00:00\\\",\\r\\n         \\\"Values\\\": [1, 2]\\r\\n      },\\r\\n      {\\r\\n         \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n         \\\"Timestamp\\\": \\\"2020-01-01T00:01:12.000+00:00\\\",\\r\\n         \\\"Values\\\": [3, 4, 5, 6]\\r\\n      },\\r\\n    ]\",\r\n        \"operationId\": \"SaveValuesAsDouble\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"precision\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Precision of DateTime. Default = MicroSeconds.  Available Values: 1 (=Microseconds), 2 (=Nanoseconds).\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/Precision\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"proofKind\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Specifies the kind of a signed merkle-tree root hash.\\r\\nIt gives a hint which algorithms have been used in order to create the proof to be able to verify it accordingly.\\r\\nDefault = SHA256_RSA2048_PSS.\\r\\nAvailable Values: 0 (=SHA256_RSA2048_PSS), 1 (=SHA256_RSA2048_PKCS1)\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/components/schemas/ProofKind\"\r\n            }\r\n          }\r\n        ],\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created.\\r\\nA Value is consisting of ValueMetadataId, Timestamp and Values\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Input-validation failed\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Unexpected exception occurred\"\r\n          },\r\n          \"589\": {\r\n            \"description\": \"Proof storing error\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/SaveValueCreateProofResult\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate key value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"schemas\": {\r\n      \"CreateProofModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"proof\": {\r\n            \"$ref\": \"#/components/schemas/Proof\"\r\n          },\r\n          \"proofLocationWithoutKey\": {\r\n            \"$ref\": \"#/components/schemas/ProofLocationWithoutKey\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"CreateValueByteModel\": {\r\n        \"required\": [\r\n          \"timestamp\",\r\n          \"valueMetadataId\",\r\n          \"values\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"byte\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"CreateValueDoubleModel\": {\r\n        \"required\": [\r\n          \"timestamp\",\r\n          \"valueMetadataId\",\r\n          \"values\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"number\",\r\n              \"format\": \"double\"\r\n            }\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"CreateValueStringModel\": {\r\n        \"required\": [\r\n          \"timestamp\",\r\n          \"valueMetadataId\",\r\n          \"values\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"uuid\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"GetProofAndValueResult\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"proof\": {\r\n            \"$ref\": \"#/components/schemas/Proof\"\r\n          },\r\n          \"proofLocation\": {\r\n            \"$ref\": \"#/components/schemas/ProofLocation\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/Value\"\r\n            },\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"GetProofResult\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"proof\": {\r\n            \"$ref\": \"#/components/schemas/Proof\"\r\n          },\r\n          \"proofLocation\": {\r\n            \"$ref\": \"#/components/schemas/ProofLocation\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"Precision\": {\r\n        \"enum\": [\r\n          \"MicroSeconds\",\r\n          \"NanoSeconds\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"ProblemDetails\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"type\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"title\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"status\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"nullable\": true\r\n          },\r\n          \"detail\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"instance\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": {}\r\n      },\r\n      \"Proof\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"id\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ID that uniquely identifies this specific proof. <br />\\r\\nWhen saving a new proof, a new uniqe Guid should be used\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"6d42e74f-7777-41a9-897d-4fbfd8e2f9b6\"\r\n          },\r\n          \"rootHash\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Root hash of the mekle-tree (as BASE64 string).\",\r\n            \"format\": \"byte\",\r\n            \"nullable\": true,\r\n            \"example\": \"xZZqgSGI3jlYSYCNq3IcYVbrGRW87O/+1+lP4ABCDqc=\"\r\n          },\r\n          \"signature\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Signature of the RootHash (as BASE64 string).\",\r\n            \"format\": \"byte\",\r\n            \"nullable\": true,\r\n            \"example\": \"D98nRXumz8/gXu8hJ/uMkDait3gUosp4zu4JTCuKlIX4yaabYgnQKNhR7WAr4nsPsp2H43kF43pDtTtn932LJe+w/Ii9SMe5n5e4L3IdunORzQPPqAhsXFhnb9tHle1Eb2KYD5+lK8m5Ud/IU5WADz366o8MKppHKOdxWTG6z0Yf7uAa9U5b6oRrKjY7AJmXnNTql4PC8YLuTGZhye6S9kI1hHqj7YWaYdUQZYbuc0Q24wAfjVCQVLzDdhdrKA8YyUF1sF9qjZgv4Gx0tlLD+XeBgszscSDHQTOuq2tZ8CqxRVbPYRK06v9bYbpglrWgWP0io0TGYKUjtMbEIuOS2A==\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ProofKind\": {\r\n        \"enum\": [\r\n          \"SHA256_RSA2048_PSS\",\r\n          \"SHA256_RSA2048_PKCS1\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"ProofLocation\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId of the data stream the proof belongs to.\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"merkleTreeDepth\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Depth of the binary merkle tree.\",\r\n            \"format\": \"int32\",\r\n            \"example\": 3\r\n          },\r\n          \"lastTimestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Timestamp of the last value that is still part of the proof.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:01:00+01:00\"\r\n          },\r\n          \"transactionId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"BigchainDB Transaction ID\",\r\n            \"nullable\": true,\r\n            \"example\": \"c6e73f43a2cf969e03965d7b20ed629d557a04c712434e6dd4baaa0187df5911\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ProofLocationWithoutKey\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataID of the data stream to which the proof belongs\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"merkleTreeDepth\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Depth of the binary merkle tree <br />\\r\\nThe number of Values that are covered by the tree = 2 ^ MerkleTreeDepth\",\r\n            \"format\": \"int32\",\r\n            \"example\": 3\r\n          },\r\n          \"lastTimestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"'Timestamp' of the last data stream Value that is still part of this proof\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:01:00+01:00\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"SaveProofResult\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"resultCode\": {\r\n            \"$ref\": \"#/components/schemas/SaveProofResultEnumeration\"\r\n          },\r\n          \"resultMessage\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Human readable description of the result\",\r\n            \"nullable\": true,\r\n            \"example\": \"1 Proof inserted with TransactionId 5cedaa9ba0ddc61f2cc88f46169bede28c752f3d9a5262b378c981ab62623b4d.\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"SaveProofResultEnumeration\": {\r\n        \"enum\": [\r\n          \"Success\",\r\n          \"Fail_BigchainDBError\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"SaveValueCreateProofResult\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"resultCode\": {\r\n            \"$ref\": \"#/components/schemas/SaveValueCreateProofResultEnumeration\"\r\n          },\r\n          \"resultMessage\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"SaveValueCreateProofResultEnumeration\": {\r\n        \"enum\": [\r\n          \"Success\",\r\n          \"Fail_InvalidValuesCount\",\r\n          \"Fail_DifferingMetadataId\",\r\n          \"Fail_ProofStoreError\",\r\n          \"Fail_DataApiError\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"ValidateProofParams\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"publicKey\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"X509 Public key as string\",\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ValidateProofResult\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"validProofExists\": {\r\n            \"type\": \"boolean\",\r\n            \"description\": \"Indicates whether the proof was found\",\r\n            \"example\": true\r\n          },\r\n          \"resultMessage\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Textual validation result\",\r\n            \"nullable\": true,\r\n            \"example\": \"Proof successfully validated.\"\r\n          },\r\n          \"resultCode\": {\r\n            \"$ref\": \"#/components/schemas/ValidateProofResultEnumeration\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ValidateProofResultEnumeration\": {\r\n        \"enum\": [\r\n          \"Success\",\r\n          \"Fail_ValuesNotFound\",\r\n          \"Fail_ProofLocationNotFound\",\r\n          \"Fail_ProofNotFound\",\r\n          \"Fail_RootHashMismatch\",\r\n          \"Fail_SignatureMismatch\",\r\n          \"Fail_InvalidPublicKey\"\r\n        ],\r\n        \"type\": \"string\"\r\n      },\r\n      \"ValidateProofsParams\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"publicKey\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"X509 Public key as string\",\r\n            \"nullable\": true\r\n          },\r\n          \"keys\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"$ref\": \"#/components/schemas/ValueKey\"\r\n            },\r\n            \"description\": \"The keys as a list of elements each consisting of ValueMetadataId and Timestamp (which act as unique identifier for each Proof).\",\r\n            \"nullable\": true,\r\n            \"example\": [\r\n              {\r\n                \"ValueMetadataId\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\",\r\n                \"Timestamp\": \"2020-01-01T01:01:02+01:00\"\r\n              },\r\n              {\r\n                \"ValueMetadataId\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\",\r\n                \"Timestamp\": \"2020-01-01T01:01:03+01:00\"\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ValidateProofsResult\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"key\": {\r\n            \"$ref\": \"#/components/schemas/ValueKey\"\r\n          },\r\n          \"validProofExists\": {\r\n            \"type\": \"boolean\",\r\n            \"description\": \"Indicates whether the proof was found\",\r\n            \"example\": true\r\n          },\r\n          \"resultMessage\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Textual validation result\",\r\n            \"nullable\": true,\r\n            \"example\": \"Proof successfully validated.\"\r\n          },\r\n          \"resultCode\": {\r\n            \"$ref\": \"#/components/schemas/ValidateProofResultEnumeration\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"Value\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"rawValues\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Raw value data\",\r\n            \"format\": \"byte\",\r\n            \"nullable\": true,\r\n            \"example\": \"AAAAAAAACEAAAAAAAAAQQA==\"\r\n          },\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataID of the data stream to validate\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:01:00+01:00\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ValueKey\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataID of the data stream to validate\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Point in time of which the proof should be validated / fetched\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:01:00+01:00\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      }\r\n    },\r\n    \"securitySchemes\": {\r\n      \"OAuth2\": {\r\n        \"type\": \"oauth2\",\r\n        \"flows\": {\r\n          \"clientCredentials\": {\r\n            \"tokenUrl\": \"https://auth.dev.dataspace-hub.com/auth/realms/dev-node-a/protocol/openid-connect/token\",\r\n            \"scopes\": {\r\n              \"profile\": \"profile\",\r\n              \"email\": \"email\",\r\n              \"trust-api\": \"trust-api\",\r\n              \"data-api\": \"data-api\",\r\n              \"node-id\": \"node-id\"\r\n            }\r\n          },\r\n          \"authorizationCode\": {\r\n            \"authorizationUrl\": \"https://auth.dev.dataspace-hub.com/auth/realms/dev-node-a/protocol/openid-connect/auth\",\r\n            \"tokenUrl\": \"https://auth.dev.dataspace-hub.com/auth/realms/dev-node-a/protocol/openid-connect/token\",\r\n            \"scopes\": {\r\n              \"profile\": \"profile\",\r\n              \"email\": \"email\",\r\n              \"trust-api\": \"trust-api\",\r\n              \"data-api\": \"data-api\",\r\n              \"node-id\": \"node-id\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"security\": [\r\n    {\r\n      \"OAuth2\": [\r\n        \"profile\",\r\n        \"email\",\r\n        \"trust-api\",\r\n        \"data-api\",\r\n        \"node-id\"\r\n      ]\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"Proof\",\r\n      \"description\": \"Create or retrieve Proofs\"\r\n    },\r\n    {\r\n      \"name\": \"Value\",\r\n      \"description\": \"Values with integrated Agent\"\r\n    }\r\n  ]\r\n}",
      "url": "http://localhost:5000/swagger/v1/swagger.json",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": true,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "o",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "TrustAPIClient",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Tributech.Dsk.Api.Clients.TrustApi",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "TrustAPIClient.gen.cs",
      "newLineBehavior": "Auto"
    }
  }
}