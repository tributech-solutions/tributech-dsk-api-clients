{
  "runtime": "NetCore31",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"openapi\": \"3.0.1\",\r\n  \"info\": {\r\n    \"title\": \"Tributech DataSpace Data API\",\r\n    \"description\": \"<p>API to store and access any kind of data. Depending on your subscriptions, your datasets can get accessed from other nodes, as they get synced to your node. This synchronisation process works in both directions, which means, your dataset gets also synched to other nodes, if the request to subscribe got granted by you.<br /><br /><a href=\\\"https://tributech.io\\\" title=\\\"Website\\\">Website</a><br /><a href=\\\"https://github.com/tributech-solutions/tributech-dsk-api-clients\\\" title =\\\"API Clients on GitHub\\\">API Clients on GitHub</a><br /><a href=\\\"https://tributech.atlassian.net/servicedesk/customer/portals\\\" title =\\\"Customer Support Portal\\\">Customer Support Portal</a><br /></p>\",\r\n    \"version\": \"v1\"\r\n  },\r\n  \"servers\": [\r\n  ],\r\n  \"paths\": {\r\n    \"/prooflocation/{valueMetadataId}/{nextLastTimestamp}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"ProofLocation\"\r\n        ],\r\n        \"summary\": \"Get ProofLocation of a data stream for a given point in time.\",\r\n        \"operationId\": \"GetProofLocation\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The ValueMedataId of the data stream\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"nextLastTimestamp\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Specifies the point in time of which ProofLocation should be returned (format: ISO 8601)\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadProofLocationModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Server Error\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/prooflocations/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"ProofLocation\"\r\n        ],\r\n        \"summary\": \"Get pageable ProofLocations by ValueMetadataId for a certain time range.\",\r\n        \"operationId\": \"GetProofLocations\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The ValueMedataId of the data stream\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'LastTimestamp', only include 'ProofLocations' with a 'LastTimestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: LastTimestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'LastTimestamp', only include 'ProofLocations' with a 'LastTimestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: LastTimestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'LastTimestamp', only include 'ProofLocations' with a 'LastTimestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: LastTimestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'LastTimestamp', only include 'ProofLocations' with a 'LastTimestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: LastTimestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Order by LastTimestamp. Default: \\\"asc\\\" or empty field. Alternative: \\\"desc\\\"\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Order by LastTimestamp. Default: \\\"asc\\\" or empty field. Alternative: \\\"desc\\\"\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadProofLocationModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Bad Request\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Server Error\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/prooflocation\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"ProofLocation\"\r\n        ],\r\n        \"summary\": \"Add a single ProofLocation.\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"SaveProofLocation\",\r\n        \"requestBody\": {\r\n          \"description\": \"The ProofLocation to be created.\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"ProofLocation created successfully.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UInt64ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/prooflocations\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"ProofLocation\"\r\n        ],\r\n        \"summary\": \"Add multiple ProofLocations.\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"SaveProofLocations\",\r\n        \"requestBody\": {\r\n          \"description\": \"The list of ProofLocations to be created.\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateProofLocationModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"ProofLocations created successfully. Returns the number of saved ProofsLocations.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UInt64ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/statistics/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Statistics\"\r\n        ],\r\n        \"summary\": \"Query basic statistics of a value metadata id\",\r\n        \"description\": \" Sample response:\\r\\n\\r\\n     [\\r\\n     \\t[\\r\\n\\t\\t\\t  {\\r\\n\\t\\t\\t    \\\"valueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n\\t\\t\\t    \\\"firstTimestamp\\\": \\\"\\\",\\r\\n             \\\"lastTimestamp\\\": \\\"\\\",\\r\\n             \\\"totalBytes\\\": 123,\\r\\n             \\\"totalCount\\\": 123,\\r\\n\\t\\t\\t  }\\r\\n\\t\\t\\t]\\r\\n     ]\",\r\n        \"operationId\": \"GetStatistics\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadStatisticsModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/status/request/{requestId}/metadata/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Status\"\r\n        ],\r\n        \"summary\": \"Get status about Values to be synced for a data stream, that is part of a given sync-request.\",\r\n        \"description\": \"Sync status according to information from Master Node.\",\r\n        \"operationId\": \"GetStreamStatus\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"requestId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The RequestId.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The ValueMedataId of the data stream.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadSyncRequestSizeModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Server Error\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/status/subscription/{requestId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Status\"\r\n        ],\r\n        \"summary\": \"Get sync status for a Subscription at Slave.\",\r\n        \"operationId\": \"GetSubscriptionStatus\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"requestId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The request id of the Subscription.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadSyncStatusModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Server Error\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/status/request/{requestId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Status\"\r\n        ],\r\n        \"summary\": \"Get sync status for a Request at Master.\",\r\n        \"operationId\": \"GetRequestStatus\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"requestId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The request id.\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadSyncStatusModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Not Found\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Server Error\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Get raw values of a data stream as byte[]\",\r\n        \"description\": \" Sample response:\\r\\n\\r\\n     [\\r\\n     \\t[\\r\\n\\t\\t\\t  {\\r\\n\\t\\t\\t    \\\"valueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n\\t\\t\\t    \\\"timestamp\\\": \\\"2020-01-01T00:00:01+00:00\\\",\\r\\n\\t\\t\\t    \\\"createdAt\\\": \\\"2020-06-08T06:05:23.476564+00:00\\\",\\r\\n\\t\\t\\t    \\\"values\\\": [ 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 0, 64 ],\\r\\n\\t\\t\\t    \\\"syncNr\\\": 1,\\r\\n\\t\\t\\t    \\\"size\\\": 16\\r\\n\\t\\t\\t  }\\r\\n\\t\\t\\t]\\r\\n     ]\",\r\n        \"operationId\": \"GetRawValues\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadValueByteModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/byte/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Get raw values of a data stream as byte[]\",\r\n        \"description\": \" Sample response:\\r\\n\\r\\n     [\\r\\n     \\t[\\r\\n\\t\\t\\t  {\\r\\n\\t\\t\\t    \\\"valueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n\\t\\t\\t    \\\"timestamp\\\": \\\"2020-01-01T00:00:01+00:00\\\",\\r\\n\\t\\t\\t    \\\"createdAt\\\": \\\"2020-06-08T06:05:23.476564+00:00\\\",\\r\\n\\t\\t\\t    \\\"values\\\": [ 0, 0, 0, 0, 0, 0, 240, 63, 0, 0, 0, 0, 0, 0, 0, 64 ],\\r\\n\\t\\t\\t    \\\"syncNr\\\": 1,\\r\\n\\t\\t\\t    \\\"size\\\": 16\\r\\n\\t\\t\\t  }\\r\\n\\t\\t\\t]\\r\\n     ]\",\r\n        \"operationId\": \"GetValuesAsByte\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadValueByteModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/string/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Get values of a data stream decoded as base64 string\",\r\n        \"description\": \"Sample response:\\r\\n            \\r\\n    [\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:02.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": \\\"AAAAAAAA8D8AAAAAAAAAQA==\\\",\\r\\n \\t   \\t\\t\\\"syncNr\\\": 8687,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t},\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:03.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": \\\"AAAAAAAA8D8AAAAAAAAAQA==\\\",\\r\\n \\t   \\t\\t\\\"syncNr\\\": 8688,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t}\\r\\n    ]\",\r\n        \"operationId\": \"GetValuesAsString\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadValueStringModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/double/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Get values of a data stream decoded as double[]\",\r\n        \"description\": \"Sample response:\\r\\n            \\r\\n    [\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:02.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": [ 48.30694, 14.28583 ],\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1687,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t},\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:03.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": [ 48.30694, 14.28583 ],\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1688,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t}\\r\\n    ]\",\r\n        \"operationId\": \"GetValuesAsDouble\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadValueDoubleModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/singledouble/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Get values of a data stream decoded as double\",\r\n        \"description\": \"Sample response:\\r\\n            \\r\\n    [\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:02.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": 48.30694,\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1687,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t},\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:03.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": 48.30694,\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1688,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t}\\r\\n    ]\",\r\n        \"operationId\": \"GetValuesSingleDoubleAsync\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadValueSingleDoubleModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/int/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Get values of a data stream decoded as int\",\r\n        \"description\": \"Sample response:\\r\\n            \\r\\n    [\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:02.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": 48,\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1687,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t},\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:03.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": 42,\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1688,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t}\\r\\n    ]\",\r\n        \"operationId\": \"GetValuesAsInt\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadValueIntModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/float/{valueMetadataId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Get values of a data stream decoded as float\",\r\n        \"description\": \"Sample response:\\r\\n            \\r\\n    [\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:02.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": 48.30694,\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1687,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t},\\r\\n    \\t{\\r\\n       \\t\\t\\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\t\\t\\\"Timestamp\\\": \\\"2020-01-01T00:00:03.000+00:00\\\",\\r\\n       \\t\\t\\\"Values\\\": 48.30694,\\r\\n \\t   \\t\\t\\\"syncNr\\\": 1688,\\r\\n\\t   \\t\\t\\\"size\\\": 16\\r\\n    \\t}\\r\\n    ]\",\r\n        \"operationId\": \"GetValuesAsFloat\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"valueMetadataId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Query data from the data stream with this ID\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"uuid\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"From\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' equal or after the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp >= From)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"To\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Filter result by 'Timestamp', only include 'Values' with a 'Timestamp' before the given filter <br />\\r\\n(format: ISO 8601, default: No filtering occurs, behavior: Timestamp < To)\",\r\n              \"format\": \"date-time\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"OrderBy\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"description\": \"Sort order of the returned 'Values' (default: \\\"asc\\\", alternative: \\\"desc\\\")\\r\\nValues are ordered by Timestamp\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageNumber\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page number (first page is 1, default: 1, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          },\r\n          {\r\n            \"name\": \"PageSize\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n            \"schema\": {\r\n              \"maximum\": 2147483647,\r\n              \"minimum\": 1,\r\n              \"type\": \"integer\",\r\n              \"description\": \"Page size (default: 100, min: 1, max: 2147483647)\",\r\n              \"format\": \"int32\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/ReadValueFloatModel\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add a single value to the data stream as byte[]\",\r\n        \"description\": \"Sample request\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:00:02.000+00:00\\\",\\r\\n       \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n    }\",\r\n        \"operationId\": \"AddValue\",\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created, encoded as byte[].\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Value created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/Int32ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value/byte\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add a single value to the data stream as byte[]\",\r\n        \"description\": \"Sample request\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:00:02.000+00:00\\\",\\r\\n       \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n    }\",\r\n        \"operationId\": \"AddValueAsByte\",\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created, encoded as byte[].\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Value created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/Int32ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value/string\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add a single value to the data stream as base64 string.\",\r\n        \"description\": \"Sample request\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:00:01.000+00:00\\\",\\r\\n       \\\"Values\\\": \\\"AAAAAAAA8D8AAAAAAAAAQA==\\\"\\r\\n    }\",\r\n        \"operationId\": \"AddValueAsBase64\",\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created, encoded as a base64 string.\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Value created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/Int32ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/value/double\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add a single value to the data stream as double[].\",\r\n        \"description\": \"Sample request\\r\\n            \\r\\n    {\\r\\n       \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n       \\\"Timestamp\\\": \\\"2020-01-01T00:00:03.000+00:00\\\",\\r\\n       \\\"Values\\\": [5, 6]\\r\\n    }\",\r\n        \"operationId\": \"AddValueAsDouble\",\r\n        \"requestBody\": {\r\n          \"description\": \"The Value to be created, encoded as double[].\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Value created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/Int32ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add multiple values to the data stream, each encoded as byte[]\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    [\\r\\n        {\\r\\n           \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n           \\\"Timestamp\\\": \\\"2020-01-01T00:00:05+00:00\\\",\\r\\n           \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n        },\\r\\n        {\\r\\n           \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n           \\\"Timestamp\\\": \\\"2020-01-01T00:00:06+00:00\\\",\\r\\n           \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n        }\\r\\n    ]\",\r\n        \"operationId\": \"AddValues\",\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created, with each encoded as byte[]\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Values created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UInt64ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/byte\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add multiple values to the data stream, each encoded as byte[]\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    [\\r\\n        {\\r\\n           \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n           \\\"Timestamp\\\": \\\"2020-01-01T00:00:05+00:00\\\",\\r\\n           \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n        },\\r\\n        {\\r\\n           \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n           \\\"Timestamp\\\": \\\"2020-01-01T00:00:06+00:00\\\",\\r\\n           \\\"Values\\\": [0, 0, 0, 0, 0, 0, 8, 64, 0, 0, 0, 0, 0, 0, 16, 64 ]\\r\\n        }\\r\\n    ]\",\r\n        \"operationId\": \"AddValuesAsByte\",\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created, with each encoded as byte[]\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueByteModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Values created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UInt64ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/string\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add multiple values to the data stream, each encoded as base64 string.\",\r\n        \"description\": \"Sample request:\\r\\n    [\\r\\n           {\\r\\n               \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n               \\\"Timestamp\\\": \\\"2020-01-01T00:00:07.000+00:00\\\",\\r\\n               \\\"Values\\\": \\\"AAAAAAAAHEAAAAAAAAAgQA==\\\"\\r\\n           },\\r\\n           {\\r\\n               \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n               \\\"Timestamp\\\": \\\"2020-01-01T00:00:08.000+00:00\\\",\\r\\n              \\\"Values\\\": \\\"AAAAAAAAIkAAAAAAAAAkQA==\\\"\\r\\n           },\\r\\n           {\\r\\n               \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n               \\\"Timestamp\\\": \\\"2020-01-01T00:00:09.000+00:00\\\",\\r\\n               \\\"Values\\\": \\\"AAAAAAAAJkAAAAAAAAAoQA==\\\"\\r\\n           },\\r\\n           {\\r\\n              \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n               \\\"Timestamp\\\": \\\"2020-01-01T00:00:10.000+00:00\\\",\\r\\n               \\\"Values\\\": \\\"AAAAAAAAKkAAAAAAAAAsQA==\\\"\\r\\n           }\\r\\n    ]\",\r\n        \"operationId\": \"AddValuesAsBase64\",\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created, with each encoded as base64 string\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueStringModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Values created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UInt64ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/values/double\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"Values\"\r\n        ],\r\n        \"summary\": \"Add multiple values to the data stream, each encoded as double[].\",\r\n        \"description\": \"Sample request:\\r\\n            \\r\\n    [\\r\\n        {\\r\\n           \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n           \\\"Timestamp\\\": \\\"2020-01-01T00:00:11.000+00:00\\\",\\r\\n           \\\"Values\\\": [1, 2]\\r\\n        },\\r\\n        {\\r\\n           \\\"ValueMetadataId\\\": \\\"04609b9a-a3d0-4d66-9b1b-802494b95523\\\",\\r\\n           \\\"Timestamp\\\": \\\"2020-01-01T00:00:12.000+00:00\\\",\\r\\n           \\\"Values\\\": [3, 4, 5, 6]\\r\\n        },\\r\\n    ]\",\r\n        \"operationId\": \"AddValuesAsDouble\",\r\n        \"requestBody\": {\r\n          \"description\": \"The list of Values to be created, with each encoded as double[]\",\r\n          \"content\": {\r\n            \"application/json-patch+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"type\": \"array\",\r\n                \"items\": {\r\n                  \"$ref\": \"#/components/schemas/CreateValueDoubleModel\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Values created successfully. Returns the number of values added to the data stream.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/UInt64ReadCreateResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid request.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ValidationProblemDetails\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"500\": {\r\n            \"description\": \"Internal server error.\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/ReadErrorResponseModel\"\r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"599\": {\r\n            \"description\": \"Duplicate timestamp value violates unique constraint.\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"schemas\": {\r\n      \"CreateProofLocationModel\": {\r\n        \"required\": [\r\n          \"lastTimestamp\",\r\n          \"merkleTreeDepth\",\r\n          \"uri\",\r\n          \"valueMetadataId\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The guid of the data stream to which the ProofLocation belgongs.\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"lastTimestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the last Value which is part of the proof was recorded on the trust agent/edge device.\\r\\nOnly precision up to microseconds is allowed, no nanoseconds!\\r\\ne.g.\\r\\n2020-08-03T12:41:01.2074910Z -> OK\\r\\n2020-08-03T12:41:01.2074913Z -> not allowed\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"merkleTreeDepth\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The depth of the binary merkle tree of the ProofLocation.\",\r\n            \"format\": \"int32\",\r\n            \"example\": 8\r\n          },\r\n          \"uri\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The Uri which specifies the location of the proof in the Trust API.\",\r\n            \"example\": \"https://trust-api.mynode.dataspace-node.com/transactions/2\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"CreateValueByteModel\": {\r\n        \"required\": [\r\n          \"timestamp\",\r\n          \"valueMetadataId\",\r\n          \"values\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The guid of the ValueMetadata entry to which the Value belgongs.\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\\r\\nOnly precision up to microseconds is allowed, no nanoseconds!\\r\\ne.g.\\r\\n2020-08-03T12:41:01.2074910Z -> OK\\r\\n2020-08-03T12:41:01.2074913Z -> not allowed\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Values as byte[] (e.g. [104, 101, 108, 108, 111]).\\r\\nor Values as double [] (e.g. [5,6].\\r\\nor Values as base64 encoded string (e.g. \\\"aGVsbG8=\\\").\",\r\n            \"format\": \"byte\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"CreateValueDoubleModel\": {\r\n        \"required\": [\r\n          \"timestamp\",\r\n          \"valueMetadataId\",\r\n          \"values\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The guid of the ValueMetadata entry to which the Value belgongs.\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\\r\\nOnly precision up to microseconds is allowed, no nanoseconds!\\r\\ne.g.\\r\\n2020-08-03T12:41:01.2074910Z -> OK\\r\\n2020-08-03T12:41:01.2074913Z -> not allowed\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"number\",\r\n              \"format\": \"double\"\r\n            },\r\n            \"description\": \"Values as byte[] (e.g. [104, 101, 108, 108, 111]).\\r\\nor Values as double [] (e.g. [5,6].\\r\\nor Values as base64 encoded string (e.g. \\\"aGVsbG8=\\\").\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"CreateValueStringModel\": {\r\n        \"required\": [\r\n          \"timestamp\",\r\n          \"valueMetadataId\",\r\n          \"values\"\r\n        ],\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The guid of the ValueMetadata entry to which the Value belgongs.\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\\r\\nOnly precision up to microseconds is allowed, no nanoseconds!\\r\\ne.g.\\r\\n2020-08-03T12:41:01.2074910Z -> OK\\r\\n2020-08-03T12:41:01.2074913Z -> not allowed\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Values as byte[] (e.g. [104, 101, 108, 108, 111]).\\r\\nor Values as double [] (e.g. [5,6].\\r\\nor Values as base64 encoded string (e.g. \\\"aGVsbG8=\\\").\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"Int32ReadCreateResponseModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"insertedCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The number of value(s) added to the data stream.\\r\\n(e.g. can be less than actual number fo values if skipUniqueConstraintViolation=true)\",\r\n            \"format\": \"int32\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"Response for insert operations.\"\r\n      },\r\n      \"ProblemDetails\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"type\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"title\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"status\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"nullable\": true\r\n          },\r\n          \"detail\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"instance\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": {}\r\n      },\r\n      \"ReadErrorResponseModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"error\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Information about the error that occured.\",\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"Response model for InternalServerError.\\r\\ne.g. for Exceptions\"\r\n      },\r\n      \"ReadProofLocationModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The guid of the data strem to which the ProofLocation belgongs.\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"lastTimestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"LastTimestamp of the last Value that is part of the the proof.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"createdAt\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the ProofLocation was created on the server.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"merkleTreeDepth\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Depth of the binary merkle-tree.\",\r\n            \"format\": \"int32\",\r\n            \"example\": 8\r\n          },\r\n          \"uri\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Uri to retrieve the ProofLocation from the Trust API.\",\r\n            \"nullable\": true,\r\n            \"example\": \"https://trust-api.mynode.dataspace-node.com/transactions/5\"\r\n          },\r\n          \"syncNr\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The synchronisation sequence number.\\r\\nThe sequence defines a order for the ProofLocations within a ValueMetadata group\\r\\nand is used for detection data-gaps on a receiving Node.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 4857\r\n          },\r\n          \"size\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The size of the ProofLocation in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 43\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadStatisticsModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId, the ID of the data stream which the 'Value' belongs to\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"firstTimestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The first timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"lastTimestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The last timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"totalBytes\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The total size of the 'Values' in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 16\r\n          },\r\n          \"totalCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The total count of the 'Values'.\",\r\n            \"format\": \"int32\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadSyncRequestSizeModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ID of the data stream\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"requestId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ID of the Request\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"43b63fda-72a1-4e5c-a2f6-7371789afe6e\"\r\n          },\r\n          \"lastSynced\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"Point in time where the last sync was performed\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"totalSize\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Cumulated size of all Values of Request/Subscription.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 87950\r\n          },\r\n          \"totalCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total number of Values of Request/Subscription.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 9875\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadSyncStatusModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"transmittedSize\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Number of Values transmitted.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 8427\r\n          },\r\n          \"transmittedCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Cumulated size of all transmitted Values.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 75941\r\n          },\r\n          \"totalSize\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Total number of Values of Request/Subscription.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 9875\r\n          },\r\n          \"totalCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"Cumulated size of all Values of Request/Subscription.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 87950\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"Sync status for Request/Subscription.\"\r\n      },\r\n      \"ReadValueByteModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId, the ID of the data stream which the 'Value' belongs to\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"createdAt\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was created on the server.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The actual data stored in this 'Value'\",\r\n            \"format\": \"byte\",\r\n            \"nullable\": true\r\n          },\r\n          \"syncNr\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The synchronisation sequence number. <br />\\r\\nThe sequence defines a order for the Values within a ValueMetadata group\\r\\nand is used for detection data-gaps on a receiving Node.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 4725\r\n          },\r\n          \"size\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The size of the 'Values' in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 16\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadValueDoubleModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId, the ID of the data stream which the 'Value' belongs to\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"createdAt\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was created on the server.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"number\",\r\n              \"format\": \"double\"\r\n            },\r\n            \"description\": \"The actual data stored in this 'Value'\",\r\n            \"nullable\": true\r\n          },\r\n          \"syncNr\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The synchronisation sequence number. <br />\\r\\nThe sequence defines a order for the Values within a ValueMetadata group\\r\\nand is used for detection data-gaps on a receiving Node.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 4725\r\n          },\r\n          \"size\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The size of the 'Values' in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 16\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadValueFloatModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId, the ID of the data stream which the 'Value' belongs to\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"createdAt\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was created on the server.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"number\",\r\n            \"description\": \"The actual data stored in this 'Value'\",\r\n            \"format\": \"float\"\r\n          },\r\n          \"syncNr\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The synchronisation sequence number. <br />\\r\\nThe sequence defines a order for the Values within a ValueMetadata group\\r\\nand is used for detection data-gaps on a receiving Node.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 4725\r\n          },\r\n          \"size\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The size of the 'Values' in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 16\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadValueIntModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId, the ID of the data stream which the 'Value' belongs to\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"createdAt\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was created on the server.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The actual data stored in this 'Value'\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"syncNr\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The synchronisation sequence number. <br />\\r\\nThe sequence defines a order for the Values within a ValueMetadata group\\r\\nand is used for detection data-gaps on a receiving Node.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 4725\r\n          },\r\n          \"size\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The size of the 'Values' in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 16\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadValueSingleDoubleModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId, the ID of the data stream which the 'Value' belongs to\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"createdAt\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was created on the server.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"number\",\r\n            \"description\": \"The actual data stored in this 'Value'\",\r\n            \"format\": \"double\"\r\n          },\r\n          \"syncNr\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The synchronisation sequence number. <br />\\r\\nThe sequence defines a order for the Values within a ValueMetadata group\\r\\nand is used for detection data-gaps on a receiving Node.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 4725\r\n          },\r\n          \"size\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The size of the 'Values' in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 16\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"ReadValueStringModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"valueMetadataId\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"ValueMetadataId, the ID of the data stream which the 'Value' belongs to\",\r\n            \"format\": \"uuid\",\r\n            \"example\": \"04609b9a-a3d0-4d66-9b1b-802494b95523\"\r\n          },\r\n          \"timestamp\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was recorded on the trust agent/edge device.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"createdAt\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The timestamp at which the Value was created on the server.\",\r\n            \"format\": \"date-time\",\r\n            \"example\": \"2020-01-01T01:00:00+01:00\"\r\n          },\r\n          \"values\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The actual data stored in this 'Value'\",\r\n            \"nullable\": true\r\n          },\r\n          \"syncNr\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The synchronisation sequence number. <br />\\r\\nThe sequence defines a order for the Values within a ValueMetadata group\\r\\nand is used for detection data-gaps on a receiving Node.\",\r\n            \"format\": \"int64\",\r\n            \"example\": 4725\r\n          },\r\n          \"size\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The size of the 'Values' in byte.\",\r\n            \"format\": \"int64\",\r\n            \"readOnly\": true,\r\n            \"example\": 16\r\n          }\r\n        },\r\n        \"additionalProperties\": false\r\n      },\r\n      \"UInt64ReadCreateResponseModel\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"insertedCount\": {\r\n            \"type\": \"integer\",\r\n            \"description\": \"The number of value(s) added to the data stream.\\r\\n(e.g. can be less than actual number fo values if skipUniqueConstraintViolation=true)\",\r\n            \"format\": \"int64\"\r\n          }\r\n        },\r\n        \"additionalProperties\": false,\r\n        \"description\": \"Response for insert operations.\"\r\n      },\r\n      \"ValidationProblemDetails\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"errors\": {\r\n            \"type\": \"object\",\r\n            \"additionalProperties\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"type\": \"string\"\r\n              }\r\n            },\r\n            \"nullable\": true\r\n          },\r\n          \"type\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"title\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"status\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"nullable\": true\r\n          },\r\n          \"detail\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          },\r\n          \"instance\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": true\r\n          }\r\n        },\r\n        \"additionalProperties\": {}\r\n      }\r\n    },\r\n    \"securitySchemes\": {\r\n      \"OAuth2\": {\r\n        \"type\": \"oauth2\",\r\n        \"flows\": {\r\n          \"clientCredentials\": {\r\n            \"tokenUrl\": \"https://auth.dev.dataspace-hub.com/auth/realms/dev-node-a/protocol/openid-connect/token\",\r\n            \"scopes\": {\r\n              \"profile\": \"profile\",\r\n              \"email\": \"email\",\r\n              \"data-api\": \"data-api\",\r\n              \"node-id\": \"node-id\"\r\n            }\r\n          },\r\n          \"authorizationCode\": {\r\n            \"authorizationUrl\": \"https://auth.dev.dataspace-hub.com/auth/realms/dev-node-a/protocol/openid-connect/auth\",\r\n            \"tokenUrl\": \"https://auth.dev.dataspace-hub.com/auth/realms/dev-node-a/protocol/openid-connect/token\",\r\n            \"scopes\": {\r\n              \"profile\": \"profile\",\r\n              \"email\": \"email\",\r\n              \"data-api\": \"data-api\",\r\n              \"node-id\": \"node-id\"\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"security\": [\r\n    {\r\n      \"OAuth2\": [\r\n        \"profile\",\r\n        \"email\",\r\n        \"data-api\",\r\n        \"node-id\"\r\n      ]\r\n    }\r\n  ]\r\n}",
      "url": "http://localhost:5010/swagger/v1/swagger.json",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "o",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "DataAPIClient",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Tributech.Dsk.Api.Clients.DataApi",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "checksumCacheEnabled": false,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "DataAPIClient.gen.cs",
      "newLineBehavior": "Auto"
    }
  }
}